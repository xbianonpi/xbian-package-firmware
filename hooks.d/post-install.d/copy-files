
case $config_platform_branch in
    rpi*|arm64)
        rm -rf ../../../content/usr/ ../../../content/opt/

        # Copy for /boot   
        [ -e ../../../content/boot.new/ ] && rm -rf ../../../content/boot.new/
        mkdir -p ../../../content/boot.new/
        cp -a ./boot/bootcode.bin ../../../content/boot.new/
        cp -a ./boot/COPYING.linux ../../../content/boot.new/
        cp -a ./boot/fixup_x.dat ../../../content/boot.new/fixup.dat
        cp -a ./boot/fixup_db.dat ../../../content/boot.new/ 2>/dev/null || :
        cp -a ./boot/fixup4x.dat ../../../content/boot.new/fixup4.dat
        cp -a ./boot/fixup4db.dat ../../../content/boot.new/ 2>/dev/null || :
        cp -a ./boot/LICENCE.broadcom ../../../content/boot.new/
        cp -a ./boot/start_x.elf ../../../content/boot.new/start.elf
        cp -a ./boot/start_db.elf ../../../content/boot.new/ 2>/dev/null || :
        cp -a ./boot/start4x.elf ../../../content/boot.new/start4.elf
        cp -a ./boot/start4db.elf ../../../content/boot.new/ 2>/dev/null || :
        mkdir -p ../../../content/boot.new/overlays
        cp -a ./boot/overlays/README ../../../content/boot.new/overlays/

        # Copy for /var/tmp
        rm -rf ../../../content/var/ && mkdir -p ../../../content/var/tmp/
        cp -a ./boot/COPYING.linux ../../../content/var/tmp/
        cp -a ./boot/LICENCE.broadcom ../../../content/var/tmp/

        if [ "$config_deb_arch" = 'arm64' ]; then
                eval $config_build_env apt-get download libraspberrypi-bin:arm64 libraspberrypi-dev:arm64 libraspberrypi0:arm64
                dpkg -x libraspberrypi-bin*.deb ../../../content/
                dpkg -x libraspberrypi-dev*.deb ../../../content/
                dpkg -x libraspberrypi0*.deb ../../../content/
                rm -f libraspberrypi-bin*.deb libraspberrypi-dev*.deb libraspberrypi0*.deb
        else
                # Copy for /opt/vc
                mkdir -p ../../../content/opt/
                cp -a ./hardfp/opt/vc/ ../../../content/opt/
                rm -rf ../../../content/opt/vc/src

                mkdir -p ../../../content/usr/{bin,include,lib,share}
                mkdir -p ../../../content/usr/lib/arm-linux-gnueabihf/pkgconfig

                LIBS="libbcm_host.so libcontainers.so libdebug_sym.so libdtovl.so libmmal_components.so libmmal_core.so \
                      libmmal.so libmmal_util.so libmmal_vc_client.so libvchiq_arm.so libvcos.so libvcsm.so"
                PKGS="bcm_host.pc mmal.pc vcsm.pc"
                INCS="bcm_host.h interface vcinclude"
                BINS="dtmerge dtoverlay dtoverlay-post dtoverlay-pre dtparam mmal_vc_diag raspistill raspivid raspividyuv \
                      raspiyuv tvservice vcgencmd vchiq_test vcmailbox"

                # libraspberrypi0 part
                for lib in $LIBS; do mv ../../../content/opt/vc/lib/$lib ../../../content/usr/lib/arm-linux-gnueabihf/$lib.0; done

                # libraspberrypi-dev part
                mv ../../../content/opt/vc/lib/{libdebug_sym_static.a,libvchostif.a} ../../../content/usr/lib/arm-linux-gnueabihf/
                for lib in $LIBS; do ( cd ../../../content/usr/lib/arm-linux-gnueabihf; ln -s $lib.0 $lib ); done
                for pkg in $PKGS; do mv ../../../content/opt/vc/lib/pkgconfig/$pkg ../../../content/usr/lib/arm-linux-gnueabihf/pkgconfig; done
                for inc in $INCS; do mv ../../../content/opt/vc/include/$inc ../../../content/usr/include; done

                # libraspberrypi-bin part
                for bin in $BINS; do mv ../../../content/opt/vc/bin/$bin ../../../content/usr/bin/$bin; done
                mv ../../../content/opt/vc/man ../../../content/usr/share
        fi
    ;;

    imx6)
        FW=$(basename $config_source_addr)
        wget $config_source_addr -O ./$FW
        sh ./$FW --auto-accept
        mkdir -p ../../../content/lib/firmware/vpu
        mkdir -p ../../../content/lib/firmware/imx/sdma
        cp -a $(echo $FW | sed "s/\.bin//g")/firmware/vpu/vpu_fw_imx6*.bin ../../../content/lib/firmware/vpu/
        cp -a $(echo $FW | sed "s/\.bin//g")/firmware/sdma/sdma-imx6q.bin ../../../content/lib/firmware/imx/sdma/
        rm -f ../$FW
    ;;

    *)
        ;;
esac
